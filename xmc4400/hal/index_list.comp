component index_list "Find angle for index points";
pin in float index_in "The signal that triggers an aquisition";
pin in float position "The signal that triggers an aquisition";
pin in float angle "Measured motor angle";
pin in bit reset=1;
pin out float index-## [40];
pin out float min-## [40];
pin out float max-## [40];
pin out float pos_min-## [40];
pin out float pos_max-## [40];
pin out float last_index "index";
function _;
license "GPL";
;;
FUNCTION(_) {
	if(reset) {
		index(0)=1e9;
		last_index=index_in;
	}
	if(last_index==index_in)
		return;
	last_index=index_in;
	for(int i=0;i<40;i++) {
		if(index(i)==index_in) {
			if(angle>max(i)) {
				max(i)=angle;
				pos_max(i)=position;
			}
			if(angle<min(i)) {
				min(i)=angle;
				pos_min(i)=position;
			}
			break;
		} else if(index(i)>index_in) {
			for(int j=39;j>i;j--) {
				index(j)=index(j-1);
				max(j)=max(j-1);
				min(j)=min(j-1);
				pos_max(j)=pos_max(j-1);
				pos_min(j)=pos_min(j-1);
			}
			index(i)=index_in;
			max(i)=angle;
			min(i)=angle;
			pos_max(i)=position;
			pos_min(i)=position;
			break;
		}
	}
}
